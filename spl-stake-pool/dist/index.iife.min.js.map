{"version":3,"file":"index.iife.min.js","sources":["../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../node_modules/.pnpm/superstruct@1.0.4/node_modules/superstruct/dist/index.mjs","../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","../node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_assert.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/crypto.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/utils.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_md.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_u64.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha512.js","../node_modules/.pnpm/@noble+curves@1.4.0/node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/.pnpm/@noble+curves@1.4.0/node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/.pnpm/@noble+curves@1.4.0/node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/.pnpm/@noble+curves@1.4.0/node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/.pnpm/@noble+curves@1.4.0/node_modules/@noble/curves/esm/ed25519.js","../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js","../node_modules/.pnpm/base-x@3.0.9/node_modules/base-x/src/index.js","../node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha256.js","../node_modules/.pnpm/text-encoding-utf-8@1.0.2/node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/.pnpm/borsh@0.7.0/node_modules/borsh/lib/index.js","../node_modules/.pnpm/@solana+buffer-layout@4.0.1/node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/.pnpm/bigint-buffer@1.1.5/node_modules/bigint-buffer/dist/browser.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v1.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/parse.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v35.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/md5.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v3.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v5.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/nil.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/version.js","../node_modules/.pnpm/jayson@4.1.0_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/jayson/lib/generateRequest.js","../node_modules/.pnpm/jayson@4.1.0_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/jayson/lib/client/browser/index.js","../node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js","../node_modules/.pnpm/rpc-websockets@7.11.1/node_modules/rpc-websockets/dist/lib/utils.cjs","../node_modules/.pnpm/rpc-websockets@7.11.1/node_modules/rpc-websockets/dist/lib/client.cjs","../node_modules/.pnpm/rpc-websockets@7.11.1/node_modules/rpc-websockets/dist/lib/client/websocket.browser.cjs","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha3.js","../node_modules/.pnpm/@noble+curves@1.4.0/node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/hmac.js","../node_modules/.pnpm/@noble+curves@1.4.0/node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/.pnpm/@noble+curves@1.4.0/node_modules/@noble/curves/esm/secp256k1.js","../node_modules/.pnpm/@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/@solana/web3.js/lib/index.browser.esm.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/constants.js","../node_modules/.pnpm/@solana+buffer-layout-utils@0.2.0_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../node_modules/.pnpm/@solana+buffer-layout-utils@0.2.0_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../node_modules/.pnpm/@solana+buffer-layout-utils@0.2.0_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs","../node_modules/.pnpm/@solana+buffer-layout-utils@0.2.0_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/errors.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/instructions/types.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/instructions/internal.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/instructions/approve.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/extensions/accountType.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/state/multisig.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/state/account.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/state/mint.js","../node_modules/.pnpm/@solana+spl-token@0.3.11_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10__buffe_k47nfjnydhb5gtr6z2bt2mpv7i/node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js","../src/constants.ts","../src/utils/math.ts","../src/utils/program-address.ts","../node_modules/.pnpm/buffer-layout@1.2.2/node_modules/buffer-layout/lib/Layout.js","../node_modules/.pnpm/@coral-xyz+borsh@0.29.0_@solana+web3.js@1.92.1_bufferutil@4.0.8_utf-8-validate@5.0.10_/node_modules/@coral-xyz/borsh/dist/index.js","../src/layouts.ts","../src/utils/stake.ts","../src/utils/instruction.ts","../src/utils/index.ts","../src/instructions.ts","../src/index.ts"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n        if (mask &&\n            struct.type !== 'type' &&\n            isObject(struct.schema) &&\n            isObject(value) &&\n            !Array.isArray(value)) {\n            for (const key in value) {\n                if (struct.schema[key] === undefined) {\n                    delete value[key];\n                }\n            }\n        }\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `withCoercion` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, { coerce: true });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createError = exports.DefaultDataPack = void 0;\nconst errors = new Map([\n    [-32000, \"Event not provided\"],\n    [-32600, \"Invalid Request\"],\n    [-32601, \"Method not found\"],\n    [-32602, \"Invalid params\"],\n    [-32603, \"Internal error\"],\n    [-32604, \"Params not found\"],\n    [-32605, \"Method forbidden\"],\n    [-32606, \"Event forbidden\"],\n    [-32700, \"Parse error\"]\n]);\nclass DefaultDataPack {\n    encode(value) {\n        return JSON.stringify(value);\n    }\n    decode(value) {\n        return JSON.parse(value);\n    }\n}\nexports.DefaultDataPack = DefaultDataPack;\n/**\n * Creates a JSON-RPC 2.0-compliant error.\n * @param {Number} code - error code\n * @param {String} details - error details\n * @return {Object}\n */\nfunction createError(code, details) {\n    const error = {\n        code: code,\n        message: errors.get(code) || \"Internal Server Error\"\n    };\n    if (details)\n        error[\"data\"] = details;\n    return error;\n}\nexports.createError = createError;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst utils_cjs_1 = require(\"./utils.cjs\");\nclass CommonClient extends eventemitter3_1.EventEmitter {\n    address;\n    rpc_id;\n    queue;\n    options;\n    autoconnect;\n    ready;\n    reconnect;\n    reconnect_timer_id;\n    reconnect_interval;\n    max_reconnects;\n    rest_options;\n    current_reconnects;\n    generate_request_id;\n    socket;\n    webSocketFactory;\n    dataPack;\n    /**\n     * Instantiate a Client class.\n     * @constructor\n     * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n     * @param {String} address - url to a websocket server\n     * @param {Object} options - ws options object with reconnect parameters\n     * @param {Function} generate_request_id - custom generation request Id\n     * @param {DataPack} dataPack - data pack contains encoder and decoder\n     * @return {CommonClient}\n     */\n    constructor(webSocketFactory, address = \"ws://localhost:8080\", { autoconnect = true, reconnect = true, reconnect_interval = 1000, max_reconnects = 5, ...rest_options } = {}, generate_request_id, dataPack) {\n        super();\n        this.webSocketFactory = webSocketFactory;\n        this.queue = {};\n        this.rpc_id = 0;\n        this.address = address;\n        this.autoconnect = autoconnect;\n        this.ready = false;\n        this.reconnect = reconnect;\n        this.reconnect_timer_id = undefined;\n        this.reconnect_interval = reconnect_interval;\n        this.max_reconnects = max_reconnects;\n        this.rest_options = rest_options;\n        this.current_reconnects = 0;\n        this.generate_request_id = generate_request_id || (() => ++this.rpc_id);\n        if (!dataPack)\n            this.dataPack = new utils_cjs_1.DefaultDataPack();\n        else\n            this.dataPack = dataPack;\n        if (this.autoconnect)\n            this._connect(this.address, {\n                autoconnect: this.autoconnect,\n                reconnect: this.reconnect,\n                reconnect_interval: this.reconnect_interval,\n                max_reconnects: this.max_reconnects,\n                ...this.rest_options\n            });\n    }\n    /**\n     * Connects to a defined server if not connected already.\n     * @method\n     * @return {Undefined}\n     */\n    connect() {\n        if (this.socket)\n            return;\n        this._connect(this.address, {\n            autoconnect: this.autoconnect,\n            reconnect: this.reconnect,\n            reconnect_interval: this.reconnect_interval,\n            max_reconnects: this.max_reconnects,\n            ...this.rest_options\n        });\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n    call(method, params, timeout, ws_opts) {\n        if (!ws_opts && \"object\" === typeof timeout) {\n            ws_opts = timeout;\n            timeout = null;\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.ready)\n                return reject(new Error(\"socket not ready\"));\n            const rpc_id = this.generate_request_id(method, params);\n            const message = {\n                jsonrpc: \"2.0\",\n                method: method,\n                params: params || undefined,\n                id: rpc_id\n            };\n            this.socket.send(this.dataPack.encode(message), ws_opts, (error) => {\n                if (error)\n                    return reject(error);\n                this.queue[rpc_id] = { promise: [resolve, reject] };\n                if (timeout) {\n                    this.queue[rpc_id].timeout = setTimeout(() => {\n                        delete this.queue[rpc_id];\n                        reject(new Error(\"reply timeout\"));\n                    }, timeout);\n                }\n            });\n        });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n    async login(params) {\n        const resp = await this.call(\"rpc.login\", params);\n        if (!resp)\n            throw new Error(\"authentication failed\");\n        return resp;\n    }\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n    async listMethods() {\n        return await this.call(\"__listMethods\");\n    }\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n    notify(method, params) {\n        return new Promise((resolve, reject) => {\n            if (!this.ready)\n                return reject(new Error(\"socket not ready\"));\n            const message = {\n                jsonrpc: \"2.0\",\n                method: method,\n                params\n            };\n            this.socket.send(this.dataPack.encode(message), (error) => {\n                if (error)\n                    return reject(error);\n                resolve();\n            });\n        });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n    async subscribe(event) {\n        if (typeof event === \"string\")\n            event = [event];\n        const result = await this.call(\"rpc.on\", event);\n        if (typeof event === \"string\" && result[event] !== \"ok\")\n            throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n        return result;\n    }\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n    async unsubscribe(event) {\n        if (typeof event === \"string\")\n            event = [event];\n        const result = await this.call(\"rpc.off\", event);\n        if (typeof event === \"string\" && result[event] !== \"ok\")\n            throw new Error(\"Failed unsubscribing from an event with: \" + result);\n        return result;\n    }\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n    close(code, data) {\n        this.socket.close(code || 1000, data);\n    }\n    /**\n     * Enable / disable automatic reconnection.\n     * @method\n     * @param {Boolean} reconnect - enable / disable reconnection\n     * @return {Undefined}\n     */\n    setAutoReconnect(reconnect) {\n        this.reconnect = reconnect;\n    }\n    /**\n     * Set the interval between reconnection attempts.\n     * @method\n     * @param {Number} interval - reconnection interval in milliseconds\n     * @return {Undefined}\n     */\n    setReconnectInterval(interval) {\n        this.reconnect_interval = interval;\n    }\n    /**\n     * Set the maximum number of reconnection attempts.\n     * @method\n     * @param {Number} max_reconnects - maximum reconnection attempts\n     * @return {Undefined}\n     */\n    setMaxReconnects(max_reconnects) {\n        this.max_reconnects = max_reconnects;\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n    _connect(address, options) {\n        clearTimeout(this.reconnect_timer_id);\n        this.socket = this.webSocketFactory(address, options);\n        this.socket.addEventListener(\"open\", () => {\n            this.ready = true;\n            this.emit(\"open\");\n            this.current_reconnects = 0;\n        });\n        this.socket.addEventListener(\"message\", ({ data: message }) => {\n            if (message instanceof ArrayBuffer)\n                message = Buffer.from(message).toString();\n            try {\n                message = this.dataPack.decode(message);\n            }\n            catch (error) {\n                return;\n            }\n            // check if any listeners are attached and forward event\n            if (message.notification && this.listeners(message.notification).length) {\n                if (!Object.keys(message.params).length)\n                    return this.emit(message.notification);\n                const args = [message.notification];\n                if (message.params.constructor === Object)\n                    args.push(message.params);\n                else\n                    // using for-loop instead of unshift/spread because performance is better\n                    for (let i = 0; i < message.params.length; i++)\n                        args.push(message.params[i]);\n                // run as microtask so that pending queue messages are resolved first\n                // eslint-disable-next-line prefer-spread\n                return Promise.resolve().then(() => { this.emit.apply(this, args); });\n            }\n            if (!this.queue[message.id]) {\n                // general JSON RPC 2.0 events\n                if (message.method) {\n                    // run as microtask so that pending queue messages are resolved first\n                    return Promise.resolve().then(() => {\n                        this.emit(message.method, message?.params);\n                    });\n                }\n                return;\n            }\n            // reject early since server's response is invalid\n            if (\"error\" in message === \"result\" in message)\n                this.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" +\n                    \" or \\\"error\\\", but not both.\"));\n            if (this.queue[message.id].timeout)\n                clearTimeout(this.queue[message.id].timeout);\n            if (message.error)\n                this.queue[message.id].promise[1](message.error);\n            else\n                this.queue[message.id].promise[0](message.result);\n            delete this.queue[message.id];\n        });\n        this.socket.addEventListener(\"error\", (error) => this.emit(\"error\", error));\n        this.socket.addEventListener(\"close\", ({ code, reason }) => {\n            if (this.ready) // Delay close event until internal state is updated\n                setTimeout(() => this.emit(\"close\", code, reason), 0);\n            this.ready = false;\n            this.socket = undefined;\n            if (code === 1000)\n                return;\n            this.current_reconnects++;\n            if (this.reconnect && ((this.max_reconnects > this.current_reconnects) ||\n                this.max_reconnects === 0))\n                this.reconnect_timer_id = setTimeout(() => this._connect(address, options), this.reconnect_interval);\n        });\n    }\n}\nexports.default = CommonClient;\n","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst eventemitter3_1 = require(\"eventemitter3\");\nclass WebSocketBrowserImpl extends eventemitter3_1.EventEmitter {\n    socket;\n    /** Instantiate a WebSocket class\n     * @constructor\n     * @param {String} address - url to a websocket server\n     * @param {(Object)} options - websocket options\n     * @param {(String|Array)} protocols - a list of protocols\n     * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n     */\n    constructor(address, options, protocols) {\n        super();\n        this.socket = new window.WebSocket(address, protocols);\n        this.socket.onopen = () => this.emit(\"open\");\n        this.socket.onmessage = (event) => this.emit(\"message\", event.data);\n        this.socket.onerror = (error) => this.emit(\"error\", error);\n        this.socket.onclose = (event) => {\n            this.emit(\"close\", event.code, event.reason);\n        };\n    }\n    /**\n     * Sends data through a websocket connection\n     * @method\n     * @param {(String|Object)} data - data to be sent via websocket\n     * @param {Object} optionsOrCallback - ws options\n     * @param {Function} callback - a callback called once the data is sent\n     * @return {Undefined}\n     */\n    send(data, optionsOrCallback, callback) {\n        const cb = callback || optionsOrCallback;\n        try {\n            this.socket.send(data);\n            cb();\n        }\n        catch (error) {\n            cb(error);\n        }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n    close(code, reason) {\n        this.socket.close(code, reason);\n    }\n    addEventListener(type, listener, options) {\n        this.socket.addEventListener(type, listener, options);\n    }\n}\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction default_1(address, options) {\n    return new WebSocketBrowserImpl(address, options);\n}\nexports.default = default_1;\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client.cjs';\nimport createRpc from 'rpc-websockets/dist/lib/client/websocket.browser.cjs';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _PublicKey;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [Symbol.toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_PublicKey = PublicKey;\nPublicKey.default = new _PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\nconst END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nfunction guardedShift(byteArray) {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift();\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nfunction guardedSplice(byteArray, ...args) {\n  const [start] = args;\n  if (args.length === 2 // Implies that `deleteCount` was supplied\n  ? start + (args[1] ?? 0) > byteArray.length : start >= byteArray.length) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(...args);\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray)\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(byteArray, 0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = guardedSplice(byteArray, 0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(byteArray, 0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\nclass SendTransactionError extends Error {\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs: logs\n  }) {\n    let message;\n    switch (action) {\n      case 'send':\n        message = `Transaction ${signature} resulted in an error. \\n` + `${transactionMessage}. ` + (logs ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. ` : '') + '\\nCatch the SendTransactionError and call `getLogs()` on it for full details.';\n        break;\n      case 'simulate':\n        message = `Simulation failed. \\nMessage: ${transactionMessage}. \\n` + (logs ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. ` : '') + '\\nCatch the SendTransactionError and call `getLogs()` on it for full details.';\n        break;\n      default:\n        message = 'Unknown action';\n    }\n    super(message);\n    this.signature = void 0;\n    this.transactionMessage = void 0;\n    this.logs = void 0;\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.logs = logs ? logs : undefined;\n  }\n  get transactionError() {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.logs) ? this.logs : undefined\n    };\n  }\n  async getLogs(connection) {\n    if (!Array.isArray(this.logs)) {\n      this.logs = new Promise((resolve, reject) => {\n        connection.getTransaction(this.signature).then(tx => {\n          if (tx && tx.meta && tx.meta.logMessages) {\n            const logs = tx.meta.logMessages;\n            this.logs = logs;\n            resolve(logs);\n          } else {\n            reject(new Error('Log messages not found'));\n          }\n        }).catch(reject);\n      });\n    }\n    return await this.logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nvar fastStableStringify = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n\nvar fastStableStringify$1 = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringify);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends RpcWebSocketCommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to agave-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  })))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"0.0.0-development\" }`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify$1(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', configWithoutEncoding);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = skipPreflight === true ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n    : options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              if (e instanceof Error) {\n                console.error(`${method} error for argument`, args, e.message);\n              }\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify$1([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(publicKey, callback, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64');\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, filters ? {\n      filters: filters\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _Lockup;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_Lockup = Lockup;\nLockup.default = new _Lockup(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId === TOKEN_PROGRAM_ID) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base.mjs';\nexport const bool = (property) => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account does not contain valid data */\nexport class TokenInvalidAccountDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountDataError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid account index */\nexport class TokenTransferHookAccountNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountNotFound';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid seed */\nexport class TokenTransferHookInvalidSeed extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookInvalidSeed';\n    }\n}\n/** Thrown if account data required by an extra account meta seed config could not be fetched */\nexport class TokenTransferHookAccountDataNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountDataNotFound';\n    }\n}\n//# sourceMappingURL=errors.js.map","/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n    TokenInstruction[TokenInstruction[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n    TokenInstruction[TokenInstruction[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n    TokenInstruction[TokenInstruction[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n    TokenInstruction[TokenInstruction[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n    TokenInstruction[TokenInstruction[\"InitializeMintCloseAuthority\"] = 25] = \"InitializeMintCloseAuthority\";\n    TokenInstruction[TokenInstruction[\"TransferFeeExtension\"] = 26] = \"TransferFeeExtension\";\n    TokenInstruction[TokenInstruction[\"ConfidentialTransferExtension\"] = 27] = \"ConfidentialTransferExtension\";\n    TokenInstruction[TokenInstruction[\"DefaultAccountStateExtension\"] = 28] = \"DefaultAccountStateExtension\";\n    TokenInstruction[TokenInstruction[\"Reallocate\"] = 29] = \"Reallocate\";\n    TokenInstruction[TokenInstruction[\"MemoTransferExtension\"] = 30] = \"MemoTransferExtension\";\n    TokenInstruction[TokenInstruction[\"CreateNativeMint\"] = 31] = \"CreateNativeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeNonTransferableMint\"] = 32] = \"InitializeNonTransferableMint\";\n    TokenInstruction[TokenInstruction[\"InterestBearingMintExtension\"] = 33] = \"InterestBearingMintExtension\";\n    TokenInstruction[TokenInstruction[\"CpiGuardExtension\"] = 34] = \"CpiGuardExtension\";\n    TokenInstruction[TokenInstruction[\"InitializePermanentDelegate\"] = 35] = \"InitializePermanentDelegate\";\n    TokenInstruction[TokenInstruction[\"TransferHookExtension\"] = 36] = \"TransferHookExtension\";\n    // ConfidentialTransferFeeExtension = 37,\n    // WithdrawalExcessLamports = 38,\n    TokenInstruction[TokenInstruction[\"MetadataPointerExtension\"] = 39] = \"MetadataPointerExtension\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map","import { PublicKey } from '@solana/web3.js';\n/** @internal */\nexport function addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({\n                pubkey: signer instanceof PublicKey ? signer : signer.publicKey,\n                isSigner: true,\n                isWritable: false,\n            });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n//# sourceMappingURL=internal.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const approveInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Approve)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map","export var AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nexport const ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError } from '../errors.js';\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11'),\n]);\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nexport async function getMultisig(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nexport function unpackMultisig(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getAccountLen } from '../extensions/extensionType.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority'),\n]);\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getAccount(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getMultipleAccounts(connection, addresses, commitment, programId = TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = getAccountLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nexport function unpackAccount(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, TokenInvalidMintError, TokenOwnerOffCurveError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint)\n            throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map","import { SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\n/**\n * Construct a CreateAssociatedTokenAccount instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.alloc(0), programId, associatedTokenProgramId);\n}\n/**\n * Construct a CreateAssociatedTokenAccountIdempotent instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: instructionData,\n    });\n}\n/**\n * Construct a RecoverNested instruction\n *\n * @param nestedAssociatedToken             Nested associated token account (must be owned by `ownerAssociatedToken`)\n * @param nestedMint                        Token mint for the nested associated token account\n * @param destinationAssociatedToken        Wallet's associated token account\n * @param ownerAssociatedToken              Owner associated token account address (must be owned by `owner`)\n * @param ownerMint                         Token mint for the owner associated token account\n * @param owner                             Wallet address for the owner associated token account\n * @param programId                         SPL Token program account\n * @param associatedTokenProgramId          SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createRecoverNestedInstruction(nestedAssociatedToken, nestedMint, destinationAssociatedToken, ownerAssociatedToken, ownerMint, owner, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: nestedAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: nestedMint, isSigner: false, isWritable: false },\n        { pubkey: destinationAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerAssociatedToken, isSigner: false, isWritable: true },\n        { pubkey: ownerMint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: true },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: Buffer.from([2]),\n    });\n}\n//# sourceMappingURL=associatedTokenAccount.js.map","import { Buffer } from 'buffer';\n\nimport {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n} from '@solana/web3.js';\n\n// Public key that identifies the metadata program.\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\nexport const METADATA_MAX_NAME_LENGTH = 32;\nexport const METADATA_MAX_SYMBOL_LENGTH = 10;\nexport const METADATA_MAX_URI_LENGTH = 200;\n\n// Public key that identifies the SPL Stake Pool program.\nexport const STAKE_POOL_PROGRAM_ID = new PublicKey('585UYiD9xQHgcrfty2PxW9GEUnQDKcAj931pKi9iv1pK');\n\n// Maximum number of validators to update during UpdateValidatorListBalance.\nexport const MAX_VALIDATORS_TO_UPDATE = 5;\n\n// Seed for ephemeral stake account\nexport const EPHEMERAL_STAKE_SEED_PREFIX = Buffer.from('ephemeral');\n\n// Seed used to derive transient stake accounts.\nexport const TRANSIENT_STAKE_SEED_PREFIX = Buffer.from('transient');\n\n// Minimum amount of staked SOL required in a validator stake account to allow\n// for merges without a mismatch on credits observed\nexport const MINIMUM_ACTIVE_STAKE = LAMPORTS_PER_SOL;\n","import BN from 'bn.js';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\n\nexport function solToLamports(amount: number): number {\n  if (isNaN(amount)) return Number(0);\n  return Number(amount * LAMPORTS_PER_SOL);\n}\n\nexport function lamportsToSol(lamports: number | BN | bigint): number {\n  if (typeof lamports === 'number') {\n    return Math.abs(lamports) / LAMPORTS_PER_SOL;\n  }\n  if (typeof lamports === 'bigint') {\n    return Math.abs(Number(lamports)) / LAMPORTS_PER_SOL;\n  }\n\n  let signMultiplier = 1;\n  if (lamports.isNeg()) {\n    signMultiplier = -1;\n  }\n\n  const absLamports = lamports.abs();\n  const lamportsString = absLamports.toString(10).padStart(10, '0');\n  const splitIndex = lamportsString.length - 9;\n  const solString = lamportsString.slice(0, splitIndex) + '.' + lamportsString.slice(splitIndex);\n  return signMultiplier * parseFloat(solString);\n}\n","import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport {\n  METADATA_PROGRAM_ID,\n  EPHEMERAL_STAKE_SEED_PREFIX,\n  TRANSIENT_STAKE_SEED_PREFIX,\n} from '../constants';\n\n/**\n * Generates the withdraw authority program address for the stake pool\n */\nexport async function findWithdrawAuthorityProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [stakePoolAddress.toBuffer(), Buffer.from('withdraw')],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [voteAccountAddress.toBuffer(), stakePoolAddress.toBuffer()],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findTransientStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [\n      TRANSIENT_STAKE_SEED_PREFIX,\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed.toBuffer('le', 8),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the ephemeral program address for stake pool redelegation\n */\nexport async function findEphemeralStakeProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [EPHEMERAL_STAKE_SEED_PREFIX, stakePoolAddress.toBuffer(), seed.toBuffer('le', 8)],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the metadata program address for the stake pool\n */\nexport function findMetadataAddress(stakePoolMintAddress: PublicKey) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [Buffer.from('metadata'), METADATA_PROGRAM_ID.toBuffer(), stakePoolMintAddress.toBuffer()],\n    METADATA_PROGRAM_ID,\n  );\n  return publicKey;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"i8\", { enumerable: true, get: function () { return buffer_layout_2.s8; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return buffer_layout_2.u16; } });\nObject.defineProperty(exports, \"i16\", { enumerable: true, get: function () { return buffer_layout_2.s16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return buffer_layout_2.s32; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return buffer_layout_2.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return buffer_layout_2.f64; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\"),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" +\n                tag.toString(\"hex\") +\n                \", got: \" +\n                receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\"),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, (data) => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data) => data.toString(\"utf-8\"), (s) => Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), (values) => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map","import { publicKey, struct, u32, u64, u8, option, vec } from '@coral-xyz/borsh';\nimport { Lockup, PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  Infer,\n  number,\n  nullable,\n  enums,\n  type,\n  coerce,\n  instance,\n  string,\n  optional,\n} from 'superstruct';\n\nexport interface Fee {\n  denominator: BN;\n  numerator: BN;\n}\n\nconst feeFields = [u64('denominator'), u64('numerator')];\n\nexport enum AccountType {\n  Uninitialized,\n  StakePool,\n  ValidatorList,\n}\n\nexport const BigNumFromString = coerce(instance(BN), string(), (value) => {\n  if (typeof value === 'string') return new BN(value, 10);\n  throw new Error('invalid big num');\n});\n\nexport const PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  (value) => new PublicKey(value),\n);\n\nexport type StakeAccountType = Infer<typeof StakeAccountType>;\nexport const StakeAccountType = enums(['uninitialized', 'initialized', 'delegated', 'rewardsPool']);\n\nexport type StakeMeta = Infer<typeof StakeMeta>;\nexport const StakeMeta = type({\n  rentExemptReserve: BigNumFromString,\n  authorized: type({\n    staker: PublicKeyFromString,\n    withdrawer: PublicKeyFromString,\n  }),\n  lockup: type({\n    unixTimestamp: number(),\n    epoch: number(),\n    custodian: PublicKeyFromString,\n  }),\n});\n\nexport type StakeAccountInfo = Infer<typeof StakeAccountInfo>;\nexport const StakeAccountInfo = type({\n  meta: StakeMeta,\n  stake: nullable(\n    type({\n      delegation: type({\n        voter: PublicKeyFromString,\n        stake: BigNumFromString,\n        activationEpoch: BigNumFromString,\n        deactivationEpoch: BigNumFromString,\n        warmupCooldownRate: number(),\n      }),\n      creditsObserved: number(),\n    }),\n  ),\n});\n\nexport type StakeAccount = Infer<typeof StakeAccount>;\nexport const StakeAccount = type({\n  type: StakeAccountType,\n  info: optional(StakeAccountInfo),\n});\n\nexport interface StakePool {\n  accountType: AccountType;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakeDepositAuthority: PublicKey;\n  stakeWithdrawBumpSeed: number;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerFeeAccount: PublicKey;\n  tokenProgramId: PublicKey;\n  totalLamports: BN;\n  poolTokenSupply: BN;\n  lastUpdateEpoch: BN;\n  lockup: Lockup;\n  epochFee: Fee;\n  nextEpochFee?: Fee | undefined;\n  preferredDepositValidatorVoteAddress?: PublicKey | undefined;\n  preferredWithdrawValidatorVoteAddress?: PublicKey | undefined;\n  stakeDepositFee: Fee;\n  stakeWithdrawalFee: Fee;\n  nextStakeWithdrawalFee?: Fee | undefined;\n  stakeReferralFee: number;\n  solDepositAuthority?: PublicKey | undefined;\n  solDepositFee: Fee;\n  solReferralFee: number;\n  solWithdrawAuthority?: PublicKey | undefined;\n  solWithdrawalFee: Fee;\n  nextSolWithdrawalFee?: Fee | undefined;\n  lastEpochPoolTokenSupply: BN;\n  lastEpochTotalLamports: BN;\n}\n\nexport const StakePoolLayout = struct<StakePool>([\n  u8('accountType'),\n  publicKey('manager'),\n  publicKey('staker'),\n  publicKey('stakeDepositAuthority'),\n  u8('stakeWithdrawBumpSeed'),\n  publicKey('validatorList'),\n  publicKey('reserveStake'),\n  publicKey('poolMint'),\n  publicKey('managerFeeAccount'),\n  publicKey('tokenProgramId'),\n  u64('totalLamports'),\n  u64('poolTokenSupply'),\n  u64('lastUpdateEpoch'),\n  struct([u64('unixTimestamp'), u64('epoch'), publicKey('custodian')], 'lockup'),\n  struct(feeFields, 'epochFee'),\n  option(struct(feeFields), 'nextEpochFee'),\n  option(publicKey(), 'preferredDepositValidatorVoteAddress'),\n  option(publicKey(), 'preferredWithdrawValidatorVoteAddress'),\n  struct(feeFields, 'stakeDepositFee'),\n  struct(feeFields, 'stakeWithdrawalFee'),\n  option(struct(feeFields), 'nextStakeWithdrawalFee'),\n  u8('stakeReferralFee'),\n  option(publicKey(), 'solDepositAuthority'),\n  struct(feeFields, 'solDepositFee'),\n  u8('solReferralFee'),\n  option(publicKey(), 'solWithdrawAuthority'),\n  struct(feeFields, 'solWithdrawalFee'),\n  option(struct(feeFields), 'nextSolWithdrawalFee'),\n  u64('lastEpochPoolTokenSupply'),\n  u64('lastEpochTotalLamports'),\n]);\n\nexport enum ValidatorStakeInfoStatus {\n  Active,\n  DeactivatingTransient,\n  ReadyForRemoval,\n}\n\nexport interface ValidatorStakeInfo {\n  status: ValidatorStakeInfoStatus;\n  voteAccountAddress: PublicKey;\n  activeStakeLamports: BN;\n  transientStakeLamports: BN;\n  transientSeedSuffixStart: BN;\n  transientSeedSuffixEnd: BN;\n  lastUpdateEpoch: BN;\n}\n\nexport const ValidatorStakeInfoLayout = struct<ValidatorStakeInfo>([\n  /// Amount of active stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('activeStakeLamports'),\n  /// Amount of transient stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('transientStakeLamports'),\n  /// Last epoch the active and transient stake lamports fields were updated\n  u64('lastUpdateEpoch'),\n  /// Start of the validator transient account seed suffixes\n  u64('transientSeedSuffixStart'),\n  /// End of the validator transient account seed suffixes\n  u64('transientSeedSuffixEnd'),\n  /// Status of the validator stake account\n  u8('status'),\n  /// Validator vote account address\n  publicKey('voteAccountAddress'),\n]);\n\nexport interface ValidatorList {\n  /// Account type, must be ValidatorList currently\n  accountType: number;\n  /// Maximum allowable number of validators\n  maxValidators: number;\n  /// List of stake info for each validator in the pool\n  validators: ValidatorStakeInfo[];\n}\n\nexport const ValidatorListLayout = struct<ValidatorList>([\n  u8('accountType'),\n  u32('maxValidators'),\n  vec(ValidatorStakeInfoLayout, 'validators'),\n]);\n","import {\n  Connection,\n  Keypair,\n  PublicKey,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { findStakeProgramAddress, findTransientStakeProgramAddress } from './program-address';\nimport BN from 'bn.js';\n\nimport { lamportsToSol } from './math';\nimport { WithdrawAccount } from '../index';\nimport {\n  Fee,\n  StakePool,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfoStatus,\n} from '../layouts';\nimport { MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from '../constants';\n\nexport async function getValidatorListAccount(connection: Connection, pubkey: PublicKey) {\n  const account = await connection.getAccountInfo(pubkey);\n  if (!account) {\n    throw new Error('Invalid validator list account');\n  }\n  return {\n    pubkey,\n    account: {\n      data: ValidatorListLayout.decode(account?.data) as ValidatorList,\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\nexport interface ValidatorAccount {\n  type: 'preferred' | 'active' | 'transient' | 'reserve';\n  voteAddress?: PublicKey | undefined;\n  stakeAddress: PublicKey;\n  lamports: number;\n}\n\nexport async function prepareWithdrawAccounts(\n  connection: Connection,\n  stakePool: StakePool,\n  stakePoolAddress: PublicKey,\n  amount: number,\n  compareFn?: (a: ValidatorAccount, b: ValidatorAccount) => number,\n  skipFee?: boolean,\n): Promise<WithdrawAccount[]> {\n  const validatorListAcc = await connection.getAccountInfo(stakePool.validatorList);\n  const validatorList = ValidatorListLayout.decode(validatorListAcc?.data) as ValidatorList;\n\n  if (!validatorList?.validators || validatorList?.validators.length == 0) {\n    throw new Error('No accounts found');\n  }\n\n  const minBalanceForRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n  const minBalance = minBalanceForRentExemption + MINIMUM_ACTIVE_STAKE;\n\n  let accounts = [] as Array<{\n    type: 'preferred' | 'active' | 'transient' | 'reserve';\n    voteAddress?: PublicKey | undefined;\n    stakeAddress: PublicKey;\n    lamports: number;\n  }>;\n\n  // Prepare accounts\n  for (const validator of validatorList.validators) {\n    if (validator.status !== ValidatorStakeInfoStatus.Active) {\n      continue;\n    }\n\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      validator.voteAccountAddress,\n      stakePoolAddress,\n    );\n\n    if (!validator.activeStakeLamports.isZero()) {\n      const isPreferred = stakePool?.preferredWithdrawValidatorVoteAddress?.equals(\n        validator.voteAccountAddress,\n      );\n      accounts.push({\n        type: isPreferred ? 'preferred' : 'active',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: stakeAccountAddress,\n        lamports: validator.activeStakeLamports.toNumber(),\n      });\n    }\n\n    const transientStakeLamports = validator.transientStakeLamports.toNumber() - minBalance;\n    if (transientStakeLamports > 0) {\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      accounts.push({\n        type: 'transient',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: transientStakeAccountAddress,\n        lamports: transientStakeLamports,\n      });\n    }\n  }\n\n  // Sort from highest to lowest balance\n  accounts = accounts.sort(compareFn ? compareFn : (a, b) => b.lamports - a.lamports);\n\n  const reserveStake = await connection.getAccountInfo(stakePool.reserveStake);\n  const reserveStakeBalance = (reserveStake?.lamports ?? 0) - minBalanceForRentExemption;\n  if (reserveStakeBalance > 0) {\n    accounts.push({\n      type: 'reserve',\n      stakeAddress: stakePool.reserveStake,\n      lamports: reserveStakeBalance,\n    });\n  }\n\n  // Prepare the list of accounts to withdraw from\n  const withdrawFrom: WithdrawAccount[] = [];\n  let remainingAmount = amount;\n\n  const fee = stakePool.stakeWithdrawalFee;\n  const inverseFee: Fee = {\n    numerator: fee.denominator.sub(fee.numerator),\n    denominator: fee.denominator,\n  };\n\n  for (const type of ['preferred', 'active', 'transient', 'reserve']) {\n    const filteredAccounts = accounts.filter((a) => a.type == type);\n\n    for (const { stakeAddress, voteAddress, lamports } of filteredAccounts) {\n      if (lamports <= minBalance && type == 'transient') {\n        continue;\n      }\n\n      let availableForWithdrawal = calcPoolTokensForDeposit(stakePool, lamports);\n\n      if (!skipFee && !inverseFee.numerator.isZero()) {\n        availableForWithdrawal = divideBnToNumber(\n          new BN(availableForWithdrawal).mul(inverseFee.denominator),\n          inverseFee.numerator,\n        );\n      }\n\n      const poolAmount = Math.min(availableForWithdrawal, remainingAmount);\n      if (poolAmount <= 0) {\n        continue;\n      }\n\n      // Those accounts will be withdrawn completely with `claim` instruction\n      withdrawFrom.push({ stakeAddress, voteAddress, poolAmount });\n      remainingAmount -= poolAmount;\n\n      if (remainingAmount == 0) {\n        break;\n      }\n    }\n\n    if (remainingAmount == 0) {\n      break;\n    }\n  }\n\n  // Not enough stake to withdraw the specified amount\n  if (remainingAmount > 0) {\n    throw new Error(\n      `No stake accounts found in this pool with enough balance to withdraw ${lamportsToSol(\n        amount,\n      )} pool tokens.`,\n    );\n  }\n\n  return withdrawFrom;\n}\n\n/**\n * Calculate the pool tokens that should be minted for a deposit of `stakeLamports`\n */\nexport function calcPoolTokensForDeposit(stakePool: StakePool, stakeLamports: number): number {\n  if (stakePool.poolTokenSupply.isZero() || stakePool.totalLamports.isZero()) {\n    return stakeLamports;\n  }\n  return Math.floor(\n    divideBnToNumber(new BN(stakeLamports).mul(stakePool.poolTokenSupply), stakePool.totalLamports),\n  );\n}\n\n/**\n * Calculate lamports amount on withdrawal\n */\nexport function calcLamportsWithdrawAmount(stakePool: StakePool, poolTokens: number): number {\n  const numerator = new BN(poolTokens).mul(stakePool.totalLamports);\n  const denominator = stakePool.poolTokenSupply;\n  if (numerator.lt(denominator)) {\n    return 0;\n  }\n  return divideBnToNumber(numerator, denominator);\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  if (denominator.isZero()) {\n    return 0;\n  }\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function newStakeAccount(\n  feePayer: PublicKey,\n  instructions: TransactionInstruction[],\n  lamports: number,\n): Keypair {\n  // Account for tokens not specified, creating one\n  const stakeReceiverKeypair = Keypair.generate();\n  console.log(`Creating account to receive stake ${stakeReceiverKeypair.publicKey}`);\n\n  instructions.push(\n    // Creating new account\n    SystemProgram.createAccount({\n      fromPubkey: feePayer,\n      newAccountPubkey: stakeReceiverKeypair.publicKey,\n      lamports,\n      space: StakeProgram.space,\n      programId: StakeProgram.programId,\n    }),\n  );\n\n  return stakeReceiverKeypair;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport { Buffer } from 'buffer';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<any>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength = type.layout.span;\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({ instruction: type.index }, fields);\n  type.layout.encode(layoutFields, data);\n\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","export * from './math';\nexport * from './program-address';\nexport * from './stake';\nexport * from './instruction';\n\nexport function arrayChunk(array: any[], size: number): any[] {\n  const result = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n","import {\n  PublicKey,\n  STAKE_CONFIG_ID,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { TOKEN_2022_PROGRAM_ID } from '@solana/spl-token';\nimport { InstructionType, encodeData, decodeData } from './utils';\nimport BN from 'bn.js';\nimport {\n  METADATA_MAX_NAME_LENGTH,\n  METADATA_MAX_SYMBOL_LENGTH,\n  METADATA_MAX_URI_LENGTH,\n  METADATA_PROGRAM_ID,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\n\n/**\n * An enumeration of valid StakePoolInstructionType's\n */\nexport type StakePoolInstructionType =\n  | 'IncreaseValidatorStake'\n  | 'DecreaseValidatorStake'\n  | 'UpdateValidatorListBalance'\n  | 'UpdateStakePoolBalance'\n  | 'CleanupRemovedValidatorEntries'\n  | 'DepositStake'\n  | 'DepositSol'\n  | 'WithdrawStake'\n  | 'WithdrawSol'\n  | 'IncreaseAdditionalValidatorStake'\n  | 'DecreaseAdditionalValidatorStake'\n  | 'DecreaseValidatorStakeWithReserve'\n  | 'Redelegate';\n\n// 'UpdateTokenMetadata' and 'CreateTokenMetadata' have dynamic layouts\n\nconst MOVE_STAKE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.ns64('lamports'),\n  BufferLayout.ns64('transientStakeSeed'),\n]);\n\nconst UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.u32('startIndex'),\n  BufferLayout.u8('noMerge'),\n]);\n\nexport function tokenMetadataLayout(\n  instruction: number,\n  nameLength: number,\n  symbolLength: number,\n  uriLength: number,\n) {\n  if (nameLength > METADATA_MAX_NAME_LENGTH) {\n    throw 'maximum token name length is 32 characters';\n  }\n\n  if (symbolLength > METADATA_MAX_SYMBOL_LENGTH) {\n    throw 'maximum token symbol length is 10 characters';\n  }\n\n  if (uriLength > METADATA_MAX_URI_LENGTH) {\n    throw 'maximum token uri length is 200 characters';\n  }\n\n  return {\n    index: instruction,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('nameLen'),\n      BufferLayout.blob(nameLength, 'name'),\n      BufferLayout.u32('symbolLen'),\n      BufferLayout.blob(symbolLength, 'symbol'),\n      BufferLayout.u32('uriLen'),\n      BufferLayout.blob(uriLength, 'uri'),\n    ]),\n  };\n}\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_POOL_INSTRUCTION_LAYOUTS: {\n  [type in StakePoolInstructionType]: InstructionType;\n} = Object.freeze({\n  DecreaseValidatorStake: {\n    index: 3,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  IncreaseValidatorStake: {\n    index: 4,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  UpdateValidatorListBalance: {\n    index: 6,\n    layout: UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT,\n  },\n  UpdateStakePoolBalance: {\n    index: 7,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  CleanupRemovedValidatorEntries: {\n    index: 8,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  DepositStake: {\n    index: 9,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  /// Withdraw the token from the pool at the current ratio.\n  WithdrawStake: {\n    index: 10,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('poolTokens'),\n    ]),\n  },\n  /// Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted to the current ratio.\n  DepositSol: {\n    index: 14,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  /// Withdraw SOL directly from the pool's reserve account. Fails if the\n  /// reserve does not have enough SOL.\n  WithdrawSol: {\n    index: 16,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('poolTokens'),\n    ]),\n  },\n  IncreaseAdditionalValidatorStake: {\n    index: 19,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('transientStakeSeed'),\n      BufferLayout.ns64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseAdditionalValidatorStake: {\n    index: 20,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('transientStakeSeed'),\n      BufferLayout.ns64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseValidatorStakeWithReserve: {\n    index: 21,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  Redelegate: {\n    index: 22,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      /// Amount of lamports to redelegate\n      BufferLayout.ns64('lamports'),\n      /// Seed used to create source transient stake account\n      BufferLayout.ns64('sourceTransientStakeSeed'),\n      /// Seed used to create destination ephemeral account.\n      BufferLayout.ns64('ephemeralStakeSeed'),\n      /// Seed used to create destination transient stake account. If there is\n      /// already transient stake, this must match the current seed, otherwise\n      /// it can be anything\n      BufferLayout.ns64('destinationTransientStakeSeed'),\n    ]),\n  },\n});\n\n/**\n * Cleans up validator stake account entries marked as `ReadyForRemoval`\n */\nexport type CleanupRemovedValidatorEntriesParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n};\n\n/**\n * Updates balances of validator and transient stake accounts in the pool.\n */\nexport type UpdateValidatorListBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  validatorAndTransientStakePairs: PublicKey[];\n  startIndex: number;\n  noMerge: boolean;\n};\n\n/**\n * Updates total pool balance based on balances in the reserve and validator list.\n */\nexport type UpdateStakePoolBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n */\nexport type DecreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface DecreaseValidatorStakeWithReserveParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n}\n\nexport interface DecreaseAdditionalValidatorStakeParams extends DecreaseValidatorStakeParams {\n  reserveStake: PublicKey;\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * (Staker only) Increase stake on a validator from the reserve account.\n */\nexport type IncreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  transientStake: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface IncreaseAdditionalValidatorStakeParams extends IncreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * Deposits a stake account into the pool in exchange for pool tokens\n */\nexport type DepositStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  depositAuthority: PublicKey;\n  withdrawAuthority: PublicKey;\n  depositStake: PublicKey;\n  validatorStake: PublicKey;\n  reserveStake: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * Withdraws a stake account from the pool in exchange for pool tokens\n */\nexport type WithdrawStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorStake: PublicKey;\n  destinationStake: PublicKey;\n  destinationStakeAuthority: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  sourcePoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Withdraw sol instruction params\n */\nexport type WithdrawSolParams = {\n  stakePool: PublicKey;\n  sourcePoolAccount: PublicKey;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  destinationSystemAccount: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  solWithdrawAuthority?: PublicKey | undefined;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n * representing ownership into the pool. Inputs are converted to the current ratio.\n */\nexport type DepositSolParams = {\n  stakePool: PublicKey;\n  depositAuthority?: PublicKey | undefined;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  fundingAccount: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n  lamports: number;\n};\n\nexport type RedelegateParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  sourceValidatorStake: PublicKey;\n  sourceTransientStake: PublicKey;\n  ephemeralStake: PublicKey;\n  destinationTransientStake: PublicKey;\n  destinationValidatorStake: PublicKey;\n  validator: PublicKey;\n  // Amount of lamports to redelegate\n  lamports: number | BN;\n  // Seed used to create source transient stake account\n  sourceTransientStakeSeed: number | BN;\n  // Seed used to create destination ephemeral account\n  ephemeralStakeSeed: number | BN;\n  // Seed used to create destination transient stake account. If there is\n  // already transient stake, this must match the current seed, otherwise\n  // it can be anything\n  destinationTransientStakeSeed: number | BN;\n};\n\nexport type CreateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  poolMint: PublicKey;\n  payer: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type UpdateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\n/**\n * Stake Pool Instruction class\n */\nexport class StakePoolInstruction {\n  /**\n   * Creates instruction to update a set of validators in the stake pool.\n   */\n  static updateValidatorListBalance(\n    params: UpdateValidatorListBalanceParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      startIndex,\n      noMerge,\n      validatorAndTransientStakePairs,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateValidatorListBalance;\n    const data = encodeData(type, { startIndex, noMerge: noMerge ? 1 : 0 });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      ...validatorAndTransientStakePairs.map((pubkey) => ({\n        pubkey,\n        isSigner: false,\n        isWritable: true,\n      })),\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update the overall stake pool balance.\n   */\n  static updateStakePoolBalance(params: UpdateStakePoolBalanceParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      managerFeeAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateStakePoolBalance;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: false },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_2022_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to cleanup removed validator entries.\n   */\n  static cleanupRemovedValidatorEntries(\n    params: CleanupRemovedValidatorEntriesParams,\n  ): TransactionInstruction {\n    const { stakePool, validatorList } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.CleanupRemovedValidatorEntries;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseValidatorStake(params: IncreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseAdditionalValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseAdditionalValidatorStake(\n    params: IncreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStake` instruction (rebalance from validator account to\n   * transient account)\n   */\n  static decreaseValidatorStake(params: DecreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStakeWithReserve` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseValidatorStakeWithReserve(\n    params: DecreaseValidatorStakeWithReserveParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStakeWithReserve;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseAdditionalValidatorStake` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseAdditionalValidatorStake(\n    params: DecreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n      ephemeralStakeSeed,\n      ephemeralStake,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit a stake account into a stake pool.\n   */\n  static depositStake(params: DepositStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      depositAuthority,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      reserveStake,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: depositAuthority, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: depositStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_2022_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit SOL into a stake pool.\n   */\n  static depositSol(params: DepositSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      depositAuthority,\n      reserveStake,\n      fundingAccount,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n      lamports,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol;\n    const data = encodeData(type, { lamports });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: fundingAccount, isSigner: true, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_2022_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (depositAuthority) {\n      keys.push({\n        pubkey: depositAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw active stake from a stake pool.\n   */\n  static withdrawStake(params: WithdrawStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      withdrawAuthority,\n      validatorStake,\n      destinationStake,\n      destinationStakeAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      managerFeeAccount,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawStake;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStakeAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_2022_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw SOL from a stake pool.\n   */\n  static withdrawSol(params: WithdrawSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      reserveStake,\n      destinationSystemAccount,\n      managerFeeAccount,\n      solWithdrawAuthority,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawSol;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationSystemAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_2022_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (solWithdrawAuthority) {\n      keys.push({\n        pubkey: solWithdrawAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `Redelegate` instruction (rebalance from one validator account to another)\n   * @param params\n   */\n  static redelegate(params: RedelegateParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      stakePoolWithdrawAuthority,\n      validatorList,\n      reserveStake,\n      sourceValidatorStake,\n      sourceTransientStake,\n      ephemeralStake,\n      destinationTransientStake,\n      destinationValidatorStake,\n      validator,\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: sourceValidatorStake, isSigner: false, isWritable: true },\n      { pubkey: sourceTransientStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: destinationTransientStake, isSigner: false, isWritable: true },\n      { pubkey: destinationValidatorStake, isSigner: false, isWritable: false },\n      { pubkey: validator, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.Redelegate, {\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to create metadata\n   * using the mpl token metadata program for the pool token\n   */\n  static createTokenMetadata(params: CreateTokenMetadataParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      tokenMetadata,\n      manager,\n      payer,\n      poolMint,\n      name,\n      symbol,\n      uri,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: poolMint, isSigner: false, isWritable: false },\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(17, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to update metadata\n   * in the mpl token metadata program account for the pool token\n   */\n  static updateTokenMetadata(params: UpdateTokenMetadataParams): TransactionInstruction {\n    const { stakePool, withdrawAuthority, tokenMetadata, manager, name, symbol, uri } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    const type = tokenMetadataLayout(18, name.length, symbol.length, uri.length);\n    const data = encodeData(type, {\n      nameLen: name.length,\n      name: Buffer.from(name),\n      symbolLen: symbol.length,\n      symbol: Buffer.from(symbol),\n      uriLen: uri.length,\n      uri: Buffer.from(uri),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Decode a deposit stake pool instruction and retrieve the instruction params.\n   */\n  static decodeDepositStake(instruction: TransactionInstruction): DepositStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 11);\n\n    decodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake, instruction.data);\n\n    return {\n      stakePool: instruction.keys[0].pubkey,\n      validatorList: instruction.keys[1].pubkey,\n      depositAuthority: instruction.keys[2].pubkey,\n      withdrawAuthority: instruction.keys[3].pubkey,\n      depositStake: instruction.keys[4].pubkey,\n      validatorStake: instruction.keys[5].pubkey,\n      reserveStake: instruction.keys[6].pubkey,\n      destinationPoolAccount: instruction.keys[7].pubkey,\n      managerFeeAccount: instruction.keys[8].pubkey,\n      referralPoolAccount: instruction.keys[9].pubkey,\n      poolMint: instruction.keys[10].pubkey,\n    };\n  }\n\n  /**\n   * Decode a deposit sol instruction and retrieve the instruction params.\n   */\n  static decodeDepositSol(instruction: TransactionInstruction): DepositSolParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 9);\n\n    const { amount } = decodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol, instruction.data);\n\n    return {\n      stakePool: instruction.keys[0].pubkey,\n      depositAuthority: instruction.keys[1].pubkey,\n      withdrawAuthority: instruction.keys[2].pubkey,\n      reserveStake: instruction.keys[3].pubkey,\n      fundingAccount: instruction.keys[4].pubkey,\n      destinationPoolAccount: instruction.keys[5].pubkey,\n      managerFeeAccount: instruction.keys[6].pubkey,\n      referralPoolAccount: instruction.keys[7].pubkey,\n      poolMint: instruction.keys[8].pubkey,\n      lamports: amount,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  private static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('Invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `Invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n","import BN from 'bn.js';\nimport { create } from 'superstruct';\n\nimport {\n  createApproveInstruction,\n  createAssociatedTokenAccountInstruction,\n  getAccount,\n  getAssociatedTokenAddressSync,\n  TOKEN_2022_PROGRAM_ID,\n} from '@solana/spl-token';\nimport {\n  AccountInfo,\n  Connection,\n  Keypair,\n  PublicKey,\n  Signer,\n  StakeAuthorizationLayout,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nimport {\n  MAX_VALIDATORS_TO_UPDATE,\n  MINIMUM_ACTIVE_STAKE,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\nimport { StakePoolInstruction } from './instructions';\nimport {\n  StakeAccount,\n  StakePool,\n  StakePoolLayout,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfo,\n} from './layouts';\nimport {\n  arrayChunk,\n  calcLamportsWithdrawAmount,\n  findEphemeralStakeProgramAddress,\n  findMetadataAddress,\n  findStakeProgramAddress,\n  findTransientStakeProgramAddress,\n  findWithdrawAuthorityProgramAddress,\n  getValidatorListAccount,\n  lamportsToSol,\n  newStakeAccount,\n  prepareWithdrawAccounts,\n  solToLamports,\n  ValidatorAccount,\n} from './utils';\n\nexport type {\n  AccountType,\n  StakePool,\n  ValidatorList,\n  ValidatorStakeInfo,\n} from './layouts';\nexport { STAKE_POOL_PROGRAM_ID } from './constants';\nexport * from './instructions';\n\nexport interface ValidatorListAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<ValidatorList>;\n}\n\nexport interface StakePoolAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<StakePool>;\n}\n\nexport interface WithdrawAccount {\n  stakeAddress: PublicKey;\n  voteAddress?: PublicKey;\n  poolAmount: number;\n}\n\n/**\n * Wrapper class for a stake pool.\n * Each stake pool has a stake pool account and a validator list account.\n */\nexport interface StakePoolAccounts {\n  stakePool: StakePoolAccount | undefined;\n  validatorList: ValidatorListAccount | undefined;\n}\n\ninterface RedelegateProps {\n  connection: Connection;\n  stakePoolAddress: PublicKey;\n  sourceVoteAccount: PublicKey;\n  destinationVoteAccount: PublicKey;\n  sourceTransientStakeSeed: number | BN;\n  destinationTransientStakeSeed: number | BN;\n  ephemeralStakeSeed: number | BN;\n  lamports: number | BN;\n}\n\n/**\n * Retrieves and deserializes a StakePool account using a web3js connection and the stake pool address.\n * @param connection: An active web3js connection.\n * @param stakePoolAddress: The public key (address) of the stake pool account.\n */\nexport async function getStakePoolAccount(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n): Promise<StakePoolAccount> {\n  const account = await connection.getAccountInfo(stakePoolAddress);\n\n  if (!account) {\n    throw new Error('Invalid stake pool account');\n  }\n\n  return {\n    pubkey: stakePoolAddress,\n    account: {\n      // @ts-ignore\n      data: StakePoolLayout.decode(account.data),\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\n/**\n * Retrieves and deserializes a Stake account using a web3js connection and the stake address.\n * @param connection: An active web3js connection.\n * @param stakeAccount: The public key (address) of the stake account.\n */\nexport async function getStakeAccount(\n  connection: Connection,\n  stakeAccount: PublicKey,\n): Promise<StakeAccount> {\n  const result = (await connection.getParsedAccountInfo(stakeAccount)).value;\n  if (!result || !('parsed' in result.data)) {\n    throw new Error('Invalid stake account');\n  }\n  const program = result.data.program;\n  if (program != 'stake') {\n    throw new Error('Not a stake account');\n  }\n  const parsed = create(result.data.parsed, StakeAccount);\n\n  return parsed;\n}\n\n/**\n * Retrieves all StakePool and ValidatorList accounts that are running a particular StakePool program.\n * @param connection: An active web3js connection.\n * @param stakePoolProgramAddress: The public key (address) of the StakePool program.\n */\nexport async function getStakePoolAccounts(\n  connection: Connection,\n  stakePoolProgramAddress: PublicKey,\n): Promise<(StakePoolAccount | ValidatorListAccount)[] | undefined> {\n  const response = await connection.getProgramAccounts(stakePoolProgramAddress);\n\n  return response.map((a) => {\n    let decodedData;\n\n    if (a.account.data.readUInt8() === 1) {\n      try {\n        decodedData = StakePoolLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode StakeAccount. Error:', error);\n        decodedData = undefined;\n      }\n    } else if (a.account.data.readUInt8() === 2) {\n      try {\n        decodedData = ValidatorListLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode ValidatorList. Error:', error);\n        decodedData = undefined;\n      }\n    } else {\n      console.error(\n        `Could not decode. StakePoolAccount Enum is ${a.account.data.readUInt8()}, expected 1 or 2!`,\n      );\n      decodedData = undefined;\n    }\n\n    return {\n      pubkey: a.pubkey,\n      account: {\n        data: decodedData,\n        executable: a.account.executable,\n        lamports: a.account.lamports,\n        owner: a.account.owner,\n      },\n    };\n  });\n}\n\n/**\n * Creates instructions required to deposit stake to stake pool.\n */\nexport async function depositStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  authorizedPubkey: PublicKey,\n  validatorVote: PublicKey,\n  depositStake: PublicKey,\n  poolTokenReceiverAccount?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [];\n\n  const poolMint = stakePool.account.data.poolMint;\n\n  // Create token account if not specified\n  if (!poolTokenReceiverAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(poolMint, authorizedPubkey, true, TOKEN_2022_PROGRAM_ID);\n    let poolTokenReceiverInfo = await connection.getAccountInfo(associatedAddress);\n    if (poolTokenReceiverInfo === null) {\n      instructions.push(\n        createAssociatedTokenAccountInstruction(\n          authorizedPubkey,\n          associatedAddress,\n          authorizedPubkey,\n          poolMint,\n          TOKEN_2022_PROGRAM_ID\n        ),\n      );\n      signers.push(Keypair.generate());\n    }\n    poolTokenReceiverAccount = associatedAddress;\n  }\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Staker,\n    }).instructions,\n  );\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Withdrawer,\n    }).instructions,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositStake({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      depositAuthority: stakePool.account.data.stakeDepositAuthority,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      referralPoolAccount: poolTokenReceiverAccount,\n      destinationPoolAccount: poolTokenReceiverAccount,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      poolMint,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to deposit sol to stake pool.\n */\nexport async function depositSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  from: PublicKey,\n  lamports: number,\n  destinationTokenAccount?: PublicKey,\n  referrerTokenAccount?: PublicKey,\n  depositAuthority?: PublicKey,\n) {\n  const fromBalance = await connection.getBalance(from, 'confirmed');\n  if (fromBalance < lamports) {\n    throw new Error(\n      `Not enough SOL to deposit into pool. Maximum deposit amount is ${lamportsToSol(\n        fromBalance,\n      )} SOL.`,\n    );\n  }\n\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n\n  // Ephemeral SOL account just to do the transfer\n  const userSolTransfer = new Keypair();\n  const signers: Signer[] = [userSolTransfer];\n  const instructions: TransactionInstruction[] = [];\n\n  // Create the ephemeral SOL account\n  instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: from,\n      toPubkey: userSolTransfer.publicKey,\n      lamports,\n    }),\n  );\n  console.log(...instructions)\n\n  // Create token account if not specified\n  if (!destinationTokenAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(stakePool.poolMint, from, true, TOKEN_2022_PROGRAM_ID);\n    let poolTokenReceiverInfo = await connection.getAccountInfo(associatedAddress);\n    if (poolTokenReceiverInfo === null) {\n      instructions.push(\n        createAssociatedTokenAccountInstruction(\n          from,\n          associatedAddress,\n          from,\n          stakePool.poolMint,\n          TOKEN_2022_PROGRAM_ID\n        ),\n      );\n    }\n    destinationTokenAccount = associatedAddress;\n  }\nconsole.log(...instructions )\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositSol({\n      stakePool: stakePoolAddress,\n      reserveStake: stakePool.reserveStake,\n      fundingAccount: userSolTransfer.publicKey,\n      destinationPoolAccount: destinationTokenAccount,\n      managerFeeAccount: stakePool.managerFeeAccount,\n      referralPoolAccount: referrerTokenAccount ?? destinationTokenAccount,\n      poolMint: stakePool.poolMint,\n      lamports,\n      withdrawAuthority,\n      depositAuthority,\n    }),\n  );\n\n  console.log(...instructions )\n  return {\n    instructions,\n    signers,\n  };\n}\n/**\n * Creates instructions required to withdraw stake from a stake pool.\n */\nexport async function withdrawStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  amount: number,\n  useReserve = false,\n  voteAccountAddress?: PublicKey,\n  stakeReceiver?: PublicKey,\n  poolTokenAccount?: PublicKey,\n  validatorComparator?: (_a: ValidatorAccount, _b: ValidatorAccount) => number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  if (!poolTokenAccount) {\n    poolTokenAccount = getAssociatedTokenAddressSync(stakePool.account.data.poolMint, tokenOwner, true, TOKEN_2022_PROGRAM_ID);\n  }\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount, \"confirmed\", TOKEN_2022_PROGRAM_ID);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n        Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  const stakeAccountRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  let stakeReceiverAccount = null;\n  if (stakeReceiver) {\n    // @ts-ignore\n    stakeReceiverAccount = await getStakeAccount(connection, stakeReceiver);\n  }\n\n  const withdrawAccounts: WithdrawAccount[] = [];\n\n  if (useReserve) {\n    withdrawAccounts.push({\n      stakeAddress: stakePool.account.data.reserveStake,\n      voteAddress: undefined,\n      poolAmount,\n    });\n    // @ts-ignore\n  } else if (stakeReceiverAccount && stakeReceiverAccount?.type == 'delegated') {\n    // @ts-ignore\n    const voteAccount = stakeReceiverAccount.info?.stake?.delegation.voter;\n    if (!voteAccount) throw new Error(`Invalid stake reciever ${stakeReceiver} delegation`);\n    const validatorListAccount = await connection.getAccountInfo(\n      stakePool.account.data.validatorList,\n    );\n\n    const validatorList = ValidatorListLayout.decode(validatorListAccount?.data) as ValidatorList;\n    const isValidVoter = validatorList.validators.find((val) =>\n      val.voteAccountAddress.equals(voteAccount),\n    );\n    if (voteAccountAddress && voteAccountAddress !== voteAccount) {\n      throw new Error(`Provided withdrawal vote account ${voteAccountAddress} does not match delegation on stake receiver account ${voteAccount},\n      remove this flag or provide a different stake account delegated to ${voteAccountAddress}`);\n    }\n    if (isValidVoter) {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        voteAccount,\n        stakePoolAddress,\n      );\n\n      const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n      if (!stakeAccount) {\n        throw new Error(`Preferred withdraw valdator's stake account is invalid`);\n      }\n\n      const availableForWithdrawal = calcLamportsWithdrawAmount(\n        stakePool.account.data,\n        stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n      );\n\n      if (availableForWithdrawal < poolAmount) {\n        throw new Error(\n          `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n            ${poolAmount} asked, ${availableForWithdrawal} available.`,\n        );\n      }\n      withdrawAccounts.push({\n        stakeAddress: stakeAccountAddress,\n        voteAddress: voteAccount,\n        poolAmount,\n      });\n    } else {\n      throw new Error(\n        `Provided stake account is delegated to a vote account ${voteAccount} which does not exist in the stake pool`,\n      );\n    }\n  } else if (voteAccountAddress) {\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      voteAccountAddress,\n      stakePoolAddress,\n    );\n    const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n    if (!stakeAccount) {\n      throw new Error('Invalid Stake Account');\n    }\n\n    const availableForWithdrawal = calcLamportsWithdrawAmount(\n      stakePool.account.data,\n      stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n    );\n\n    if (availableForWithdrawal < poolAmount) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(\n        `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n          ${poolAmount} asked, ${availableForWithdrawal} available.`,\n      );\n    }\n    withdrawAccounts.push({\n      stakeAddress: stakeAccountAddress,\n      voteAddress: voteAccountAddress,\n      poolAmount,\n    });\n  } else {\n    // Get the list of accounts to withdraw from\n    withdrawAccounts.push(\n      ...(await prepareWithdrawAccounts(\n        connection,\n        stakePool.account.data,\n        stakePoolAddress,\n        poolAmount,\n        validatorComparator,\n        poolTokenAccount.equals(stakePool.account.data.managerFeeAccount),\n      )),\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n      [], \n      TOKEN_2022_PROGRAM_ID\n    ),\n  );\n\n  let totalRentFreeBalances = 0;\n\n  // Max 5 accounts to prevent an error: \"Transaction too large\"\n  const maxWithdrawAccounts = 5;\n  let i = 0;\n\n  // Go through prepared accounts and withdraw/claim them\n  for (const withdrawAccount of withdrawAccounts) {\n    if (i > maxWithdrawAccounts) {\n      break;\n    }\n    // Convert pool tokens amount to lamports\n    const solWithdrawAmount = Math.ceil(\n      calcLamportsWithdrawAmount(stakePool.account.data, withdrawAccount.poolAmount),\n    );\n\n    let infoMsg = `Withdrawing ◎${solWithdrawAmount},\n      from stake account ${withdrawAccount.stakeAddress?.toBase58()}`;\n\n    if (withdrawAccount.voteAddress) {\n      infoMsg = `${infoMsg}, delegated to ${withdrawAccount.voteAddress?.toBase58()}`;\n    }\n\n    console.info(infoMsg);\n    let stakeToReceive;\n\n    // @ts-ignore\n    if (!stakeReceiver || (stakeReceiverAccount && stakeReceiverAccount.type === 'delegated')) {\n      const stakeKeypair = newStakeAccount(tokenOwner, instructions, stakeAccountRentExemption);\n      signers.push(stakeKeypair);\n      totalRentFreeBalances += stakeAccountRentExemption;\n      stakeToReceive = stakeKeypair.publicKey;\n    } else {\n      stakeToReceive = stakeReceiver;\n    }\n\n    instructions.push(\n      StakePoolInstruction.withdrawStake({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        validatorStake: withdrawAccount.stakeAddress,\n        destinationStake: stakeToReceive,\n        destinationStakeAuthority: tokenOwner,\n        sourceTransferAuthority: userTransferAuthority.publicKey,\n        sourcePoolAccount: poolTokenAccount,\n        managerFeeAccount: stakePool.account.data.managerFeeAccount,\n        poolMint: stakePool.account.data.poolMint,\n        poolTokens: withdrawAccount.poolAmount,\n        withdrawAuthority,\n      }),\n    );\n    i++;\n  }\n  // @ts-ignore\n  if (stakeReceiver && stakeReceiverAccount && stakeReceiverAccount.type === 'delegated') {\n    signers.forEach((newStakeKeypair) => {\n      instructions.concat(\n        StakeProgram.merge({\n          stakePubkey: stakeReceiver,\n          sourceStakePubKey: newStakeKeypair.publicKey,\n          authorizedPubkey: tokenOwner,\n        }).instructions,\n      );\n    });\n  }\n\n  return {\n    instructions,\n    signers,\n    stakeReceiver,\n    totalRentFreeBalances,\n  };\n}\n\n/**\n * Creates instructions required to withdraw SOL directly from a stake pool.\n */\nexport async function withdrawSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  solReceiver: PublicKey,\n  amount: number,\n  solWithdrawAuthority?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  const poolTokenAccount = getAssociatedTokenAddressSync(\n    stakePool.account.data.poolMint,\n    tokenOwner,\n    true, \n    TOKEN_2022_PROGRAM_ID\n  );\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount, \"confirmed\", TOKEN_2022_PROGRAM_ID);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n          Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  const poolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  if (solWithdrawAuthority) {\n    const expectedSolWithdrawAuthority = stakePool.account.data.solWithdrawAuthority;\n    if (!expectedSolWithdrawAuthority) {\n      throw new Error('SOL withdraw authority specified in arguments but stake pool has none');\n    }\n    if (solWithdrawAuthority.toBase58() != expectedSolWithdrawAuthority.toBase58()) {\n      throw new Error(\n        `Invalid deposit withdraw specified, expected ${expectedSolWithdrawAuthority.toBase58()}, received ${solWithdrawAuthority.toBase58()}`,\n      );\n    }\n  }\n\n  const withdrawTransaction = StakePoolInstruction.withdrawSol({\n    stakePool: stakePoolAddress,\n    withdrawAuthority: poolWithdrawAuthority,\n    reserveStake: stakePool.account.data.reserveStake,\n    sourcePoolAccount: poolTokenAccount,\n    sourceTransferAuthority: userTransferAuthority.publicKey,\n    destinationSystemAccount: solReceiver,\n    managerFeeAccount: stakePool.account.data.managerFeeAccount,\n    poolMint: stakePool.account.data.poolMint,\n    poolTokens: poolAmount,\n    solWithdrawAuthority,\n  });\n\n  instructions.push(withdrawTransaction);\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to increase validator stake.\n */\nexport async function increaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const transientStakeSeed = validatorInfo.transientSeedSuffixStart.addn(1); // bump up by one to avoid reuse\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    StakePoolInstruction.increaseAdditionalValidatorStake({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      transientStakeSeed: transientStakeSeed.toNumber(),\n      withdrawAuthority,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    });\n  } else {\n    instructions.push(\n      StakePoolInstruction.increaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to decrease validator stake.\n */\nexport async function decreaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const transientStakeSeed = validatorInfo.transientSeedSuffixStart.addn(1); // bump up by one to avoid reuse\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.decreaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.decreaseValidatorStakeWithReserve({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to completely update a stake pool after epoch change.\n */\nexport async function updateStakePool(\n  connection: Connection,\n  stakePool: StakePoolAccount,\n  noMerge = false,\n) {\n  const stakePoolAddress = stakePool.pubkey;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const updateListInstructions: TransactionInstruction[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  let startIndex = 0;\n  const validatorChunks: Array<ValidatorStakeInfo[]> = arrayChunk(\n    validatorList.account.data.validators,\n    MAX_VALIDATORS_TO_UPDATE,\n  );\n\n  for (const validatorChunk of validatorChunks) {\n    const validatorAndTransientStakePairs: PublicKey[] = [];\n\n    for (const validator of validatorChunk) {\n      const validatorStake = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      validatorAndTransientStakePairs.push(validatorStake);\n\n      const transientStake = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      validatorAndTransientStakePairs.push(transientStake);\n    }\n\n    updateListInstructions.push(\n      StakePoolInstruction.updateValidatorListBalance({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        validatorAndTransientStakePairs,\n        withdrawAuthority,\n        startIndex,\n        noMerge,\n      }),\n    );\n    startIndex += MAX_VALIDATORS_TO_UPDATE;\n  }\n\n  instructions.push(\n    StakePoolInstruction.updateStakePoolBalance({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      poolMint: stakePool.account.data.poolMint,\n      withdrawAuthority,\n    }),\n  );\n\n  instructions.push(\n    StakePoolInstruction.cleanupRemovedValidatorEntries({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n    }),\n  );\n\n  return {\n    updateListInstructions,\n    finalInstructions: instructions,\n  };\n}\n\n/**\n * Retrieves detailed information about the StakePool.\n */\nexport async function stakePoolInfo(connection: Connection, stakePoolAddress: PublicKey) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const reserveAccountStakeAddress = stakePool.account.data.reserveStake;\n  const totalLamports = stakePool.account.data.totalLamports;\n  const lastUpdateEpoch = stakePool.account.data.lastUpdateEpoch;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const maxNumberOfValidators = validatorList.account.data.maxValidators;\n  const currentNumberOfValidators = validatorList.account.data.validators.length;\n\n  const epochInfo = await connection.getEpochInfo();\n  const reserveStake = await connection.getAccountInfo(reserveAccountStakeAddress);\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const minimumReserveStakeBalance = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const stakeAccounts = await Promise.all(\n    validatorList.account.data.validators.map(async (validator) => {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      const updateRequired = !validator.lastUpdateEpoch.eqn(epochInfo.epoch);\n      return {\n        voteAccountAddress: validator.voteAccountAddress.toBase58(),\n        stakeAccountAddress: stakeAccountAddress.toBase58(),\n        validatorActiveStakeLamports: validator.activeStakeLamports.toString(),\n        validatorLastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        validatorLamports: validator.activeStakeLamports\n          .add(validator.transientStakeLamports)\n          .toString(),\n        validatorTransientStakeAccountAddress: transientStakeAccountAddress.toBase58(),\n        validatorTransientStakeLamports: validator.transientStakeLamports.toString(),\n        updateRequired,\n      };\n    }),\n  );\n\n  const totalPoolTokens = lamportsToSol(stakePool.account.data.poolTokenSupply);\n  const updateRequired = !lastUpdateEpoch.eqn(epochInfo.epoch);\n\n  return {\n    address: stakePoolAddress.toBase58(),\n    poolWithdrawAuthority: withdrawAuthority.toBase58(),\n    manager: stakePool.account.data.manager.toBase58(),\n    staker: stakePool.account.data.staker.toBase58(),\n    stakeDepositAuthority: stakePool.account.data.stakeDepositAuthority.toBase58(),\n    stakeWithdrawBumpSeed: stakePool.account.data.stakeWithdrawBumpSeed,\n    maxValidators: maxNumberOfValidators,\n    validatorList: validatorList.account.data.validators.map((validator) => {\n      return {\n        activeStakeLamports: validator.activeStakeLamports.toString(),\n        transientStakeLamports: validator.transientStakeLamports.toString(),\n        lastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        transientSeedSuffixStart: validator.transientSeedSuffixStart.toString(),\n        transientSeedSuffixEnd: validator.transientSeedSuffixEnd.toString(),\n        status: validator.status.toString(),\n        voteAccountAddress: validator.voteAccountAddress.toString(),\n      };\n    }), // CliStakePoolValidator\n    validatorListStorageAccount: stakePool.account.data.validatorList.toBase58(),\n    reserveStake: stakePool.account.data.reserveStake.toBase58(),\n    poolMint: stakePool.account.data.poolMint.toBase58(),\n    managerFeeAccount: stakePool.account.data.managerFeeAccount.toBase58(),\n    tokenProgramId: stakePool.account.data.tokenProgramId.toBase58(),\n    totalLamports: stakePool.account.data.totalLamports.toString(),\n    poolTokenSupply: stakePool.account.data.poolTokenSupply.toString(),\n    lastUpdateEpoch: stakePool.account.data.lastUpdateEpoch.toString(),\n    lockup: stakePool.account.data.lockup, // pub lockup: CliStakePoolLockup\n    epochFee: stakePool.account.data.epochFee,\n    nextEpochFee: stakePool.account.data.nextEpochFee,\n    preferredDepositValidatorVoteAddress:\n      stakePool.account.data.preferredDepositValidatorVoteAddress,\n    preferredWithdrawValidatorVoteAddress:\n      stakePool.account.data.preferredWithdrawValidatorVoteAddress,\n    stakeDepositFee: stakePool.account.data.stakeDepositFee,\n    stakeWithdrawalFee: stakePool.account.data.stakeWithdrawalFee,\n    // CliStakePool the same\n    nextStakeWithdrawalFee: stakePool.account.data.nextStakeWithdrawalFee,\n    stakeReferralFee: stakePool.account.data.stakeReferralFee,\n    solDepositAuthority: stakePool.account.data.solDepositAuthority?.toBase58(),\n    solDepositFee: stakePool.account.data.solDepositFee,\n    solReferralFee: stakePool.account.data.solReferralFee,\n    solWithdrawAuthority: stakePool.account.data.solWithdrawAuthority?.toBase58(),\n    solWithdrawalFee: stakePool.account.data.solWithdrawalFee,\n    nextSolWithdrawalFee: stakePool.account.data.nextSolWithdrawalFee,\n    lastEpochPoolTokenSupply: stakePool.account.data.lastEpochPoolTokenSupply.toString(),\n    lastEpochTotalLamports: stakePool.account.data.lastEpochTotalLamports.toString(),\n    details: {\n      reserveStakeLamports: reserveStake?.lamports,\n      reserveAccountStakeAddress: reserveAccountStakeAddress.toBase58(),\n      minimumReserveStakeBalance,\n      stakeAccounts,\n      totalLamports,\n      totalPoolTokens,\n      currentNumberOfValidators,\n      maxNumberOfValidators,\n      updateRequired,\n    }, // CliStakePoolDetails\n  };\n}\n\n/**\n * Creates instructions required to redelegate stake.\n */\nexport async function redelegate(props: RedelegateProps) {\n  const {\n    connection,\n    stakePoolAddress,\n    sourceVoteAccount,\n    sourceTransientStakeSeed,\n    destinationVoteAccount,\n    destinationTransientStakeSeed,\n    ephemeralStakeSeed,\n    lamports,\n  } = props;\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const stakePoolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const sourceValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n  );\n\n  const sourceTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n    new BN(sourceTransientStakeSeed),\n  );\n\n  const destinationValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n  );\n\n  const destinationTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n    new BN(destinationTransientStakeSeed),\n  );\n\n  const ephemeralStake = await findEphemeralStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n    new BN(ephemeralStakeSeed),\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.redelegate({\n      stakePool: stakePool.pubkey,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      stakePoolWithdrawAuthority,\n      ephemeralStake,\n      ephemeralStakeSeed,\n      sourceValidatorStake,\n      sourceTransientStake,\n      sourceTransientStakeSeed,\n      destinationValidatorStake,\n      destinationTransientStake,\n      destinationTransientStakeSeed,\n      validator: destinationVoteAccount,\n      lamports,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to create pool token metadata.\n */\nexport async function createPoolTokenMetadata(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  payer: PublicKey,\n  name: string,\n  symbol: string,\n  uri: string,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n  const tokenMetadata = findMetadataAddress(stakePool.account.data.poolMint);\n  const manager = stakePool.account.data.manager;\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.createTokenMetadata({\n      stakePool: stakePoolAddress,\n      poolMint: new PublicKey(\"Es2RUioo4WvbhHdGSR65kgHscE4Q1jbmbJRQZEPcqmZ9\"),\n      payer,\n      manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to update pool token metadata.\n */\nexport async function updatePoolTokenMetadata(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  name: string,\n  symbol: string,\n  uri: string,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const tokenMetadata = findMetadataAddress(stakePool.account.data.poolMint);\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.updateTokenMetadata({\n      stakePool: stakePoolAddress,\n      manager: stakePool.account.data.manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","wordSize","Buffer","window","require$$0","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","toArray","Math","ceil","i","j","w","off","_strip","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseLength","parseBase","str","end","mul","b","len","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","move","src","_move","clone","_expand","size","strip","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","s","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","m","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","p","acc","modn","egcd","x","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","n","tmp","_tmp","ireduce","rlen","split","imulK","undefined","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","StructError","TypeError","failure","failures","cached","message","explanation","rest","path","join","super","cause","Object","assign","isIterable","isObject","iterator","print","value","JSON","stringify","shiftIterator","done","toFailure","result","context","struct","branch","type","refinement","key","toFailures","run","options","coerce","coercer","schema","status","validator","v","entries","ts","Map","set","Set","refiner","Struct$1","Struct","props","create","is","validate","tuples","tuple","error","define","any","array","Element","slice","boolean","enums","values","description","map","includes","instance","Class","literal","constant","never","nullable","isNaN","optional","record","Key","Value","Structs","Never","keys","union","S","coerced","first","push","unknown","condition","base64Js","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","code","getLens","b64","validLen","indexOf","placeHoldersLen","lens","_byteLength","arr","curByte","tripletToBase64","encodeChunk","uint8","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","Infinity","write","rt","floor","log","LN2","base64","require$$1","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","proto","foo","setPrototypeOf","defineProperty","enumerable","get","isBuffer","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","fromObject","toPrimitive","assertSize","alloc","fill","encoding","checked","allocUnsafeSlow","isEncoding","actual","fromArrayLike","arrayView","obj","numberIsNaN","data","_isBuffer","compare","String","toLowerCase","concat","list","pos","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","apply","toLocaleString","equals","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","_arr","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","last","boundsError","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","writable","configurable","stack","range","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isSafeInteger","isBytes","lengths","hash","outputLen","blockLen","exists","checkFinished","destroyed","finished","crypto","globalThis","u32","Uint32Array","createView","DataView","rotr","byteSwap","byteSwap32","TextEncoder","encode","toBytes","abytes","concatBytes","arrays","sum","pad","Hash","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","l","setUint32","Chi","Maj","HashMD","padOffset","take","dataView","process","roundClean","digestInto","oview","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_0n","_1n","_2n","item","hexes","_","padStart","bytesToHex","hex","numberToHexUnpadded","hexToNumber","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hexToBytes","hl","al","ai","n1","n2","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","equalBytes","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","tonelliShanks","P","legendreC","Q","Z","p1div4","tonelliFast","root","eql","Q1div2","tonelliSlow","ONE","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","reduce","FpPow","f","FpInvertBatch","nums","lastMultiplied","is0","inverted","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","Field","redef","sqrtP","freeze","lhs","rhs","sqrN","addN","subN","mulN","invertBatch","cmov","fromBytes","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","getMinHashLength","mapHashToField","fieldLen","minLen","reduced","wNAF","constTimeNegate","negate","W","windows","unsafeLadder","double","precomputeWindow","points","precomputes","BASE","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","msgs","ut.concatBytes","sign","R","verifyOpts","verify","sig","publicKey","SB","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","Fp$1","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","SHA256_K","SHA256_IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","kind","forEach","serializeStruct","borshSerialize","structSchema","fields","idx","Writer","deserializeField","reader","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Layout_1","Layout$3","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","cstr","blob","unionLayoutDiscriminator","seq","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","Layout$2","span","property","makeDestinationObject","getSpan","replicate","rv","fromArray","bindConstructorLayout","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator$1","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","BitField$1","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","version","hashfunc","generateUUID","namespace","err","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","v5","v5$1","nil","generateRequest","method","params","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","filter","has","Events","__proto__","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","createError","DefaultDataPack","details","client","eventemitter3_1","utils_cjs_1","CommonClient","address","rpc_id","queue","autoconnect","ready","reconnect","reconnect_timer_id","reconnect_interval","max_reconnects","rest_options","current_reconnects","generate_request_id","socket","webSocketFactory","dataPack","_connect","connect","timeout","ws_opts","Promise","resolve","reject","send","promise","setTimeout","login","resp","listMethods","notify","subscribe","unsubscribe","close","setAutoReconnect","setReconnectInterval","interval","setMaxReconnects","clearTimeout","addEventListener","notification","then","reason","_default","websocket_browser","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","default_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","finish","writeInto","bufferOut","xofInto","xof","keccak_256","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","ut.abytes","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","ut.isBytes","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","hmac","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","mod.invert","cat","sqrtError","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","mod.getMinHashLength","mod.mapHashToField","isProbPub","getSharedSecret","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","signature","sg","_sig","derError","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","getPrototypeOf","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","c2","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","properties","SOLANA_SCHEMA","decodeUnchecked","Enum","enum","_PublicKey","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","PublicKey","decoded","unique","toBase58","zeroPad","toStringTag","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","findProgramAddress","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout.blob","rustString","rsl","BufferLayout.struct","BufferLayout.u32","BufferLayout.offset","_decode","_encode","rslShim","chars","authorized","lockup","BufferLayout.ns64","voteInit","BufferLayout.u8","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","guardedSplice","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","programIds","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","BufferLayout.seq","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","_compile","valid","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","signatureErrors","_getMessageSignednessErrors","missing","invalid","config","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","TransactionMessage","decompile","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SendTransactionError","action","transactionMessage","logs","transactionError","getLogs","getTransaction","tx","logMessages","catch","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","encodeData","allocLength","layoutFields","decodeData$1","FeeCalculatorLayout","BufferLayout.nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","bigIntLayout","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","createAccount","transfer","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","getDefaultExportFromCjs","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","fastStableStringify$1","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","fetchImpl","fetch","RpcWebSocketClient","RpcWebSocketCommonClient","url","rpc","createRpc","underlyingSocket","readyState","decodeData","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","agent","fetchWithMiddleware","info","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","configWithoutEncoding","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","isBlockhashValid","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","BufferLayout.u16","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","_Lockup","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","delegate","authorize","authorizeWithSeed","splitInstruction","rentExemptReserve","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","UpdateValidatorIdentity","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","updateValidatorIdentity","VALIDATOR_INFO_KEY","InfoString","website","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","assert$1","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","TOKEN_PROGRAM_ID","TOKEN_2022_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","bool","boolLayout","publicKeyLayout","TokenError","TokenAccountNotFoundError","TokenInvalidAccountError","TokenInvalidAccountOwnerError","TokenInvalidAccountSizeError","TokenOwnerOffCurveError","TokenInstruction","addSigners","ownerOrAuthority","multiSigners","approveInstructionData","createApproveInstruction","Approve","AccountType","ACCOUNT_TYPE_SIZE","MultisigLayout","MULTISIG_SIZE","AccountState","AccountLayout","ACCOUNT_SIZE","getAccount","unpackAccount","rawAccount","tlvData","delegateOption","delegatedAmount","isInitialized","Uninitialized","isFrozen","Frozen","isNative","isNativeOption","closeAuthority","closeAuthorityOption","MintLayout","getAssociatedTokenAddressSync","allowOwnerOffCurve","associatedTokenProgramId","createAssociatedTokenAccountInstruction","associatedToken","buildAssociatedTokenAccountInstruction","METADATA_PROGRAM_ID","METADATA_MAX_NAME_LENGTH","METADATA_MAX_SYMBOL_LENGTH","METADATA_MAX_URI_LENGTH","STAKE_POOL_PROGRAM_ID","MAX_VALIDATORS_TO_UPDATE","EPHEMERAL_STAKE_SEED_PREFIX","TRANSIENT_STAKE_SEED_PREFIX","MINIMUM_ACTIVE_STAKE","solToLamports","lamportsToSol","signMultiplier","absLamports","lamportsString","splitIndex","solString","parseFloat","findWithdrawAuthorityProgramAddress","stakePoolAddress","findStakeProgramAddress","voteAccountAddress","findTransientStakeProgramAddress","findEphemeralStakeProgramAddress","findMetadataAddress","stakePoolMintAddress","Layout$1","upv","const","rustEnum","vecU8","tagged","vec","i256","u256","i128","u128","i32","i8","buffer_layout_1","web3_js_1","buffer_layout_2","BNLayout","signed","i64","WrappedLayout","decoder","encoder","OptionLayout","decodeBool","encodeBool","wrappedLayout","decodeTag","receivedTag","variants","discriminant","unionLayout","MapEntryLayout","keyLayout","valueLayout","keyBytes","valueBytes","feeFields","BigNumFromString","StakeAccountType","StakeMeta","StakeAccountInfo","stake","delegation","voter","activationEpoch","deactivationEpoch","warmupCooldownRate","creditsObserved","StakeAccount","StakePoolLayout","ValidatorStakeInfoStatus","ValidatorStakeInfoLayout","ValidatorListLayout","getValidatorListAccount","prepareWithdrawAccounts","stakePool","compareFn","skipFee","validatorListAcc","validatorList","minBalanceForRentExemption","minBalance","Active","stakeAccountAddress","activeStakeLamports","isPreferred","preferredWithdrawValidatorVoteAddress","voteAddress","stakeAddress","transientStakeLamports","transientStakeAccountAddress","transientSeedSuffixStart","reserveStake","reserveStakeBalance","_b","withdrawFrom","remainingAmount","stakeWithdrawalFee","inverseFee","numerator","denominator","filteredAccounts","availableForWithdrawal","calcPoolTokensForDeposit","divideBnToNumber","poolAmount","stakeLamports","poolTokenSupply","totalLamports","calcLamportsWithdrawAmount","poolTokens","quotient","newStakeAccount","stakeReceiverKeypair","arrayChunk","MOVE_STAKE_LAYOUT","UPDATE_VALIDATOR_LIST_BALANCE_LAYOUT","tokenMetadataLayout","nameLength","symbolLength","uriLength","STAKE_POOL_INSTRUCTION_LAYOUTS","DecreaseValidatorStake","IncreaseValidatorStake","UpdateValidatorListBalance","UpdateStakePoolBalance","CleanupRemovedValidatorEntries","DepositStake","WithdrawStake","DepositSol","WithdrawSol","IncreaseAdditionalValidatorStake","DecreaseAdditionalValidatorStake","DecreaseValidatorStakeWithReserve","Redelegate","StakePoolInstruction","updateValidatorListBalance","withdrawAuthority","startIndex","noMerge","validatorAndTransientStakePairs","updateStakePoolBalance","managerFeeAccount","poolMint","cleanupRemovedValidatorEntries","increaseValidatorStake","transientStake","validatorStake","validatorVote","transientStakeSeed","increaseAdditionalValidatorStake","ephemeralStake","ephemeralStakeSeed","decreaseValidatorStake","decreaseValidatorStakeWithReserve","decreaseAdditionalValidatorStake","depositStake","depositAuthority","destinationPoolAccount","referralPoolAccount","depositSol","fundingAccount","withdrawStake","destinationStake","destinationStakeAuthority","sourceTransferAuthority","sourcePoolAccount","withdrawSol","destinationSystemAccount","solWithdrawAuthority","redelegate","stakePoolWithdrawAuthority","sourceValidatorStake","sourceTransientStake","destinationTransientStake","destinationValidatorStake","sourceTransientStakeSeed","destinationTransientStakeSeed","createTokenMetadata","tokenMetadata","manager","symbol","uri","nameLen","symbolLen","uriLen","updateTokenMetadata","decodeDepositStake","decodeDepositSol","getStakePoolAccount","getStakeAccount","stakeAccount","getStakePoolAccounts","stakePoolProgramAddress","decodedData","poolTokenReceiverAccount","associatedAddress","poolTokenReceiverInfo","stakeDepositAuthority","destinationTokenAccount","referrerTokenAccount","fromBalance","stakePoolAccount","userSolTransfer","tokenOwner","useReserve","stakeReceiver","poolTokenAccount","validatorComparator","tokenAccount","stakeAccountRentExemption","stakeReceiverAccount","withdrawAccounts","voteAccount","_d","validatorListAccount","isValidVoter","userTransferAuthority","totalRentFreeBalances","maxWithdrawAccounts","withdrawAccount","solWithdrawAmount","infoMsg","stakeToReceive","stakeKeypair","newStakeKeypair","solReceiver","poolWithdrawAuthority","expectedSolWithdrawAuthority","withdrawTransaction","validatorInfo","updateStakePool","updateListInstructions","validatorChunks","validatorChunk","finalInstructions","stakePoolInfo","reserveAccountStakeAddress","lastUpdateEpoch","maxNumberOfValidators","maxValidators","currentNumberOfValidators","epochInfo","minimumReserveStakeBalance","stakeAccounts","updateRequired","validatorActiveStakeLamports","validatorLastUpdateEpoch","validatorLamports","validatorTransientStakeAccountAddress","validatorTransientStakeLamports","totalPoolTokens","stakeWithdrawBumpSeed","transientSeedSuffixEnd","validatorListStorageAccount","tokenProgramId","epochFee","nextEpochFee","preferredDepositValidatorVoteAddress","stakeDepositFee","nextStakeWithdrawalFee","stakeReferralFee","solDepositAuthority","solDepositFee","solReferralFee","solWithdrawalFee","nextSolWithdrawalFee","lastEpochPoolTokenSupply","lastEpochTotalLamports","reserveStakeLamports","sourceVoteAccount","destinationVoteAccount","createPoolTokenMetadata","updatePoolTokenMetadata"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68]}